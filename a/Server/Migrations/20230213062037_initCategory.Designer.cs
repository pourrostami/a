// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using a.Server.Data;

#nullable disable

namespace a.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230213062037_initCategory")]
    partial class initCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("a.Shared.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "نامه",
                            Status = 1,
                            Url = "letter"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "دنیا",
                            Status = 1,
                            Url = "world"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "حیرت و شگفتی",
                            Status = 1,
                            Url = "perplexity"
                        });
                });

            modelBuilder.Entity("a.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "بروید ای حریفان بکشید یار ما را . به من آورید آخر صنم گریز پا رادم سخت گرم دارد که به جادوی و افسون . بزند گره بر آب او و ببند او هوا ر ا ",
                            ImageUrl = "./img/a.jpg",
                            Price = 11,
                            Title = "بکشید یار ما را"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "به ترانه های شیرین به بهانه های زرین . بکشید سوی خانه مه خوب خوش لقا را",
                            ImageUrl = "./img/b.jpg",
                            Price = 33,
                            Title = "به ترانه های شیرین"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "وگر او به وعده گوید که دمی دگر بیایم . همه وعده مکر باشد بفریبد او شما را",
                            ImageUrl = "./img/c.jpg",
                            Price = 3,
                            Title = "دمی دگر"
                        });
                });

            modelBuilder.Entity("a.Shared.Product", b =>
                {
                    b.HasOne("a.Shared.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("a.Shared.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
